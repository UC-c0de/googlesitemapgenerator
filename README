==== Google Sitemap Generator ====

--- Installation ---
See doc/gsg-installation.html

--- Build under Linux ---
Users can build a binary from source by themselves. There are two steps.
0) Prerequisite:
  a) gcc-3.4 (including g++) is the supported building tool.
  b) GNU Make 3.81 is required. Others are not verified.

1) Generate Makefile with configure script.
  configure script is a standard configuration script generated by autoconf.

  a) Options:
  Besides common configuration options like CC, CPPFLAGS, and etc, some other
  options are provided. Note, options for C++ are ignored, like CXX, CXXFLAGS.
  In Makefile, gcc is used as the front end to compile and link C++. As a
  result, CFLAGS is also applied to C++ source file.
  --with-apache-include=APACHE_HEADER_FILE_DRECTORY
    This option specifies the directory including Apache development header
    files. This option is required.
  --with-apr-include=APR_HEADER_FILE_DIRECTORY
    This option specifies the direcotry including APR (Apache Portable Runtime)
    development header files. This option is required if Apache version is 2.0
    or higher. It must be the same APR including directory with that used by
    Apache. Usually, APR-0 is used for Apache 2.0 while APR-1 is used for
    Apache 2.2.

  b) Sample:
  ./configure CC=/usr/bin/gcc-4.1 CPPFLAGS="-DEAPI"
      --with-apache-include=/usr/include/apache-1.3
    This will generate a Makefile, which is used to build binary for Apache 1.3
    with EAPI enabled. The building tool is /usr/bin/gcc-4.1.
  ./configure CC=/usr/bin/gcc-64 CFLAGS="-m64 -g -O2"
      --with-apache-include=/usr/local/include/apache-2.2
      --with-apache-include=/usr/local/include64/apr-1.0
    This will generate a Makefile, which is used to build binary for
    Apache 2.2. 64 bit binary will be compiled in this case.

2) Run Makefile to build the binary.
  a) Targets:
    all:
      Build binary files and leave them in source directories.
      This is the default make target.
    clean:
      Clean binary files from source directories.
    distclean:
      "clean", and remove files generated by configure script.
    installer:
      "all", and copy binary files to ./sitemap-install directory.
    install:
      "installer", and start to install automatically.


--- Build Under Windows ---
0) Prerequisite:
  a) Microsoft Windows SDK 6.0
  b) Microsoft Visual Studio 2005
  c) Set Windows SDK 6.0 as the default platform SDK in Visual Studio 2005.
     It can be set in Tools->Options->Project and Solutions->VC++ Directories.

1) Steps to build MSI package.
  a) Open sitemap.sln with Miscrosoft Visual Studio 2005.
  b) Change "Configuration" to "Release", and "Platform" to "x64".
     Build IIS6_Filter and IIS7_Module project under this setting.
  c) Change "Configuration" to "Release", and "Platform" to "Win32".
     Build IIS6_Filter, IIS7_Module, and SitemapService under this setting.
  d) Build "SitemapSetup" project.
     Find installation package in ./Release/sitemap_setup.msi.
